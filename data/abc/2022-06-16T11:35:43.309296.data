environ({'PATH': '/Applications/Wireshark.app/Contents/MacOS:/usr/local/Cellar/redis@4.0/4.0.14_1/bin:/Library/Java/JavaVirtualMachines/jdk1.8.0_321.jdk/Contents/Home/bin:/Users/ailx10/opt/anaconda3/envs/py3hack/bin:/Users/ailx10/opt/anaconda3/condabin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:.', 'CONDA_DEFAULT_ENV': 'py3hack', 'CONDA_EXE': '/Users/ailx10/opt/anaconda3/bin/conda', 'JAVA_HOME': '/Library/Java/JavaVirtualMachines/jdk1.8.0_321.jdk/Contents/Home', 'CONDA_PYTHON_EXE': '/Users/ailx10/opt/anaconda3/bin/python', 'COMMAND_MODE': 'unix2003', 'CONDA_PREFIX': '/Users/ailx10/opt/anaconda3/envs/py3hack', 'DISPLAY': '/private/tmp/com.apple.launchd.hQFtJlws3p/org.xquartz:0', '_CE_M': '', 'LOGNAME': 'ailx10', 'XPC_SERVICE_NAME': 'application.com.jetbrains.pycharm.ce.12888473630.12888474367', 'PWD': '/Users/ailx10/py3hack/chapter7/ailx10trojan/modules', 'PYCHARM_HOSTED': '1', 'CONDA_SHLVL': '2', '__CFBundleIdentifier': 'com.jetbrains.pycharm.ce', 'PYTHONPATH': '/Users/ailx10/py3hack', 'SHELL': '/bin/bash', 'PYTHONIOENCODING': 'UTF-8', 'SECURITYSESSIONID': '186a5', 'USER': 'ailx10', 'TMPDIR': '/var/folders/dz/4whzbwj1231_2q3ntsh_j_s80000gn/T/', 'LaunchInstanceID': '21E06826-CBA2-42A2-8385-4489E3C96A41', 'SSH_AUTH_SOCK': '/private/tmp/com.apple.launchd.rN1SwqFVly/Listeners', '_CE_CONDA': '', 'XPC_FLAGS': '0x0', 'PYTHONUNBUFFERED': '1', '__CF_USER_TEXT_ENCODING': '0x1F5:0x19:0x34', 'CONDA_PROMPT_MODIFIER': '(py3hack) ', 'LC_CTYPE': 'zh_CN.UTF-8', 'HOME': '/Users/ailx10'})